version: '2'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./certs:/etc/nginx/certs:ro
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - network
    restart: always
  letsencrypt-nginx-proxy-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    networks:
      - network
    volumes:
      - ./certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    volumes_from:
      - nginx-proxy
    restart: always
  deployer:
    build: deployer
    container_name: deployer
    env_file: .env
    networks:
      - network
    expose:
      - "7777"
    restart: always
    environment:
      VIRTUAL_HOST: deploy.to-hutohu.com
      LETSENCRYPT_HOST: deploy.to-hutohu.com
      LETSENCRYPT_EMAIL: tohu.soy@gmail.com
    volumes:
      - /srv:/srv
      - /var/run/docker.sock:/var/run/docker.sock
      - /usr/bin/docker:/usr/local/bin/doker
  portainer:
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
    expose:
      - "9000"
    networks:
      - network
    environment:
      VIRTUAL_HOST: portainer.to-hutohu.com
      LETSENCRYPT_HOST: portainer.to-hutohu.com
      LETSENCRYPT_EMAIL: tohu.soy@gmail.com

networks:
  network:
    driver: bridge
